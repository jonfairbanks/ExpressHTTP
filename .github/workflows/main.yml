name: Create Release(s)

on:
  push:
    branches:
      - master
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - uses: act10ns/slack@v1
        with:
          status: starting

      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Update Version File(s)
        id: update-versions
        run: |
          # Bump version
          npm version --no-git-tag-version patch
          # Get new bumped version
          PACKAGE_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')
          # Output new version for other steps
          echo "::set-output name=version::$PACKAGE_VERSION"

      - name: Commit Version Updates
        uses: EndBug/add-and-commit@v7.2.1
        with:
          message: "v${{ steps.update-versions.outputs.version }}"
          tag: "${{ steps.update-versions.outputs.version }}"
          push: "origin master --force"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Image Tag(s)
        id: tag-images
        run: |
          if [[ ${{ steps.update-versions.outputs.version }} =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="${{ github.repository }}:${{ steps.update-versions.outputs.version }},${{ github.repository }}:latest"
          else
            TAGS="${{ github.repository }}:latest"
          fi
          echo "::set-output name=tags::${TAGS}"

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Cache Docker Layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build & Push Docker Image
        id: docker-build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ steps.tag-images.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Create GitHub Release
        id: create-releases
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.update-versions.outputs.version }}
          release_name: Docker Release v${{ steps.update-versions.outputs.version }}
          body: |
            The latest version(s) can be launched with:
              - `docker run -d -p 8080:8080 --name express-http --restart always ${{ github.repository }}:${{ steps.update-versions.outputs.version }}`
          draft: false
          prerelease: false

      - uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: always()
